name: Weekly Sync with Upstream

on:
  schedule:
    # Run every Monday at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:
    inputs:
      sync_type:
        description: 'Sync type'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - main-only
          - feature-only
      create_release:
        description: 'Create GitHub release'
        required: false
        default: false
        type: boolean
      create_pr:
        description: 'Create PR if feature updates available'
        required: false
        default: false
        type: boolean

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

       - name: Run sync script
         id: sync
         env:
           SYNC_TYPE: ${{ github.event.inputs.sync_type || 'full' }}
           CREATE_RELEASE: ${{ github.event.inputs.create_release || 'false' }}
           CREATE_PR: ${{ github.event.inputs.create_pr || 'false' }}
         run: |
           CMD="./scripts/manual-sync.sh -t $SYNC_TYPE"
           if [[ "$CREATE_RELEASE" == "true" ]]; then
             CMD="$CMD -r"
           fi
           if [[ "$CREATE_PR" == "true" ]]; then
             CMD="$CMD -p"
           fi
           eval "$CMD"

           # Set output to indicate sync success
           echo "sync_success=true" >> $GITHUB_OUTPUT

       - name: Build and test
         if: steps.sync.outputs.sync_success == 'true'
         continue-on-error: true
         id: test
         run: |
           echo "üî® Building project..."
           if npm run build; then
             echo "‚úÖ Build successful"
             echo "build_success=true" >> $GITHUB_OUTPUT
           else
             echo "‚ùå Build failed"
             echo "build_success=false" >> $GITHUB_OUTPUT
             exit 1
           fi

       - name: Run tests
         if: steps.test.outputs.build_success == 'true'
         continue-on-error: true
         id: test_run
         run: |
           echo "üß™ Running OpenRouter tests..."
           if npm test -- --testPathPattern="openRouter" 2>/dev/null; then
             echo "‚úÖ OpenRouter tests passed"
             echo "test_success=true" >> $GITHUB_OUTPUT
           else
             echo "‚ö†Ô∏è OpenRouter tests failed or not found"
             echo "test_success=false" >> $GITHUB_OUTPUT
             # Don't fail the step, just report
           fi

       - name: Sync completion status
         if: always()
         run: |
           echo "üìä Sync Completion Report"
           echo "========================"

           if [[ "${{ steps.sync.outputs.sync_success }}" == "true" ]]; then
             echo "‚úÖ Sync: SUCCESS"
           else
             echo "‚ùå Sync: FAILED"
           fi

           if [[ "${{ steps.test.outputs.build_success }}" == "true" ]]; then
             echo "‚úÖ Build: SUCCESS"
           elif [[ "${{ steps.test.outputs.build_success }}" == "false" ]]; then
             echo "‚ùå Build: FAILED"
           else
             echo "‚è≠Ô∏è Build: SKIPPED (sync failed)"
           fi

           if [[ "${{ steps.test_run.outputs.test_success }}" == "true" ]]; then
             echo "‚úÖ Tests: SUCCESS"
           elif [[ "${{ steps.test_run.outputs.test_success }}" == "false" ]]; then
             echo "‚ö†Ô∏è Tests: FAILED (non-critical)"
           else
             echo "‚è≠Ô∏è Tests: SKIPPED"
           fi

           echo ""
           echo "üìù Notes:"
           if [[ "${{ steps.sync.outputs.sync_success }}" == "true" ]]; then
             echo "- Sync completed successfully"
             echo "- Changes have been merged and pushed"
           fi

           if [[ "${{ steps.test.outputs.build_success }}" == "false" ]]; then
             echo "- Build failed - manual investigation recommended"
           fi

           if [[ "${{ steps.test_run.outputs.test_success }}" == "false" ]]; then
             echo "- Tests failed - this is non-critical for sync completion"
             echo "- Consider investigating test issues separately"
           fi

       - name: Notify on critical failure
         if: failure() && steps.sync.outputs.sync_success != 'true'
         run: |
           echo "üö® CRITICAL: Sync failed to complete!"
           echo "Check the logs above for details."
           echo "You may need to resolve conflicts manually or run sync locally."

       - name: Notify on test issues
         if: steps.test.outputs.build_success == 'false' || steps.test_run.outputs.test_success == 'false'
         run: |
           echo "‚ö†Ô∏è NON-CRITICAL: Build or test issues detected"
           echo "Sync completed successfully, but there are quality issues to address:"
           if [[ "${{ steps.test.outputs.build_success }}" == "false" ]]; then
             echo "- Build is failing"
           fi
           if [[ "${{ steps.test_run.outputs.test_success }}" == "false" ]]; then
             echo "- Tests are failing"
           fi
           echo "Consider investigating these issues in a separate workflow or locally."
